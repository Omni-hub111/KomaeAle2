body {
    margin: 0;
    padding: 0;
    width: 100%;
    height: 4000px;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center;
    background-color: #53c197;
    overflow-x: hidden; /* Disable horizontal scrolling */
    overflow-y: auto; /* Allow vertical scrolling */
    z-index: 1000;
}

body.overlay-open {
    overflow: hidden; /* Disable scrolling */
}

#scrollingImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 50%; /* 画像の高さを自動で設定 */
    transition: opacity 0.5s ease-in-out; /* 透明度の変化を滑らかにする */
}

.top-bar {
    position: fixed; /* Fix at the top of the screen */
    top: 0;
    right: 48px; /* Adjust the right distance */
    padding: 10px;
    z-index: 1000;
}

/* Hide Top Bar on screens 800px or smaller */
@media screen and (max-width: 800px) {
    .top-bar {
        display: none;
    }
}

@font-face {
    font-family: 'Glowing Bubble'; /* Font family name */
    src: url('Font/Glowing Bubble.ttf') format('truetype'); /* Path to the font file */
}

a {
    font-family: 'Glowing Bubble', sans-serif; 
}

.top-bar a {
    margin-right: 10px; /* Adjust margin */
    font-size: 42px; /* Specify font size */
    color: #000000;
    text-decoration: none;
}

.bar {
    width: 100%;
    height: 5px;
    background-color: #000;
    margin-bottom: 5px;
    border-radius: 5px;
    transition: transform 0.3s ease;
}

.container {
    
    display: flex;
    flex-direction: column; /* Arrange content vertically */
    justify-content: flex-start; /* Align content to the top */
    align-items: center; /* Center align content */
    width: 100%; /* Width is relative to the parent element */
    min-height: 120vh; /* Minimum height is relative to the viewport height */
    padding-top: 100px; /* Set top padding */
    box-sizing: border-box;
    position: relative;
    overflow-x: hidden; /* Disable horizontal scrolling */
    overflow-y: hidden; /* Disable vertical scrolling */
    z-index: 30; /* Position behind other elements */
    aspect-ratio: 16 / 9; /* Set the aspect ratio */
}


.youtube-container {
    position: absolute; /* 仮想的なコンテナを作成 */
    width: 45%; /* 長方形の幅を75%に設定 */
    border: 3px solid #000000; /* 枠線を追加 */
    box-sizing: border-box; /* パディングやボーダーを含む全体のサイズを調整 */
    padding-top: 25%;
}

.youtube-container iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* 親コンテナの幅に合わせる */
    height: 100%; /* 親コンテナの高さに合わせる */
    border: none; /* iframeのボーダーを削除 */
    box-sizing: border-box; /* iframeのサイズを調整 */
}


@keyframes bounce {
    0% {
        transform: translateY(-130%);
    }
    50% {
        transform: translateY(-30%);
    }
    60% {
        transform: translateY(-40%);
    }
    70% {
        transform: translateY(-30%);
    }
    80% {
        transform: translateY(-35%);
    }
    90% {
        transform: translateY(-30%);
    }
    100% {
        transform: translateY(-30%);
    }
}

@keyframes tilt {
    0%, 100% {
        transform: rotate(0deg);
    }
    33% {
        transform: rotate(-25deg);
    }
    66% {
        transform: rotate(20deg);
    }
}

.Yoyo {
    width: 25%;
    position: absolute;
    transition: all 3s ease-in-out;
    animation: bounce 1.5s ease forwards;
}

#YoyoL {
    left: 0%;
    z-index: 30;
  
}

#YoyoR {
    right: 0%;
    z-index: 30;


}
.Event-Title {
    position: absolute;
    top: 3%; /* コンテナの上から3%の位置に配置 */
    width: 30%; /* 幅を30%に設定 */
    
}


#highlight {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    width: 30%;
    z-index: -1; /* Position behind other elements */
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f8f65e; /* Set overlay background color to yellow */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 999; /* オーバーレイを他の要素よりも前面に表示 */
    transition: opacity 0.3s ease; /* Set fade animation */
}

.overlay img {
    margin-bottom: 20px; /* メニューアイコンとテキストの間の間隔を設定 */
}

.overlay .text-container {
    
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.overlay .text-container a {
    margin: 10px; /* テキスト間の間隔を設定 */
    font-size: 60px; /* テキストのフォントサイズを設定 */
    color: #000000;
}


.menu-icon {
    position: fixed;
    top: 22px;
    right: 20px;
    width: 30px;
    height: 30px;
    cursor: pointer;
    z-index: 1000;
}

.bar {
    width: 100%;
    height: 5px;
    background-color: #000;
    margin-bottom: 5px;
    border-radius: 5px;
    transition: transform 0.3s ease;
}

.menu-open .bar:nth-child(1) {
    transform: translateY(10px) rotate(45deg);
}

.menu-open .bar:nth-child(2) {
    opacity: 0;
}

.menu-open .bar:nth-child(3) {
    transform: translateY(-10px) rotate(-45deg);
}

.menu-open + .container {
    transform: translateX(200px); /* Shift content to the right when the menu is open */
}




.rectangle {
    position: absolute;
    top: 0%; /* Adjust to position within the container */
    left: 50%;
    transform: translateX(-50%);
    width: 40%; /* Fixed width */
    height: 0; /* Initial height */
    max-height: 500%; /* Set the maximum height */
    background-color: #f8f65e; /* Yellow color */
    z-index: 998;
    transform-origin: top; /* Scale from the top */
    mask-image: url('Line.png'); /* Use Line.png as mask */
    mask-size: cover; /* Cover the entire element */
    mask-repeat: no-repeat; /* Do not repeat the mask image */
}

.EvetntsContainer {
    display: flex;
    flex-direction: column; /* Arrange content vertically */
    justify-content: flex-start; /* Align content to the top */
    align-items: center; /* Center align content */
    width: 100%; /* Width is relative to the parent element */
    min-height: 120vh; /* Minimum height is relative to the viewport height */
    height: 80%;
    box-sizing: border-box;
    position: relative;
    overflow-x: hidden; /* Disable horizontal scrolling */
    overflow-y: hidden; /* Disable vertical scrolling */
    z-index: 30; /* Position behind other elements */
    aspect-ratio: 16 / 9; /* Set the aspect ratio */
}

.Events, .Images {
    position: absolute;
    width: 0; /* 初期幅を0に設定 */
    opacity: 0; /* 初期不透明度を0に設定 */
    transition: width 1s ease-in-out, opacity 1s ease-in-out; /* アニメーションの設定 */
}

#Spring {
    top: 1%;
    left: 2%;
    z-index: 30;
}

#Blossom {
    top: 18%;
    left: 54%;
    z-index: 30;
}

#Eco {
    top: 36%;
    left: 20%;
    z-index: 30;
}

#River {
    top: 54%;
    left: 72%;
    z-index: 30;
}

#Life {
    top: 72%;
    left: 5%;
    z-index: 30;
}

#Citizen {
    top: 87%;
    left: 50%;
    z-index: 30;
}

#Snow {
    top: 87%;
    left: 20%;
    z-index: 30;
}

#RIsu {
    top: 75%;
    left: 40%;
    z-index: 30;
}

#Watermelon {
    top: 50%;
    left: 55%;
    z-index: 30;
}

#Sakura {
    top: 26%;
    left: 22%;
    z-index: 30;
}

#Mochi {
    top: 10%;
    left: 40%;
    z-index: 30;
}

.Events.show{
    width: 25%; /* 幅を25%に設定 */
    opacity: 1; /* 不透明度を1に設定 */
}

.Images.show2 {
    width: 13%; /* 幅を25%に設定 */
    opacity: 1; /* 不透明度を1に設定 */
}


.Mousecontainer {
    position: relative;
    top: 88%;
    width: 24px;
    height: 24px;
  }
  
  .chevron {
    position: absolute;
    width: 28px;
    height: 8px;
    opacity: 0;
    transform: scale3d(0.5, 0.5, 0.5);
    animation: move 3s ease-out infinite;
  }
  
  .chevron:first-child {
    animation: move 3s ease-out 1s infinite;
  }
  
  .chevron:nth-child(2) {
    animation: move 3s ease-out 2s infinite;
  }
  
  .chevron:before,
  .chevron:after {
    content: ' ';
    position: absolute;
    top: 0;
    height: 100%;
    width: 51%;
    background: #22e389;
  }
  
  .chevron:before {
    left: 0;
    transform: skew(0deg, 30deg);
  }
  
  .chevron:after {
    right: 0;
    width: 50%;
    transform: skew(0deg, -30deg);
  }
  
  @keyframes move {
    25% {
      opacity: 1;
  
    }
    33% {
      opacity: 1;
      transform: translateY(30px);
    }
    67% {
      opacity: 1;
      transform: translateY(40px);
    }
    100% {
      opacity: 0;
      transform: translateY(55px) scale3d(0.5, 0.5, 0.5);
    }
  }
  
  .text {
    display: block;
    margin-top: 70px;
    margin-left: -30px;
    font-family: "Helvetica Neue", "Helvetica", Arial, sans-serif;
    font-size: 15px;
    color: #4dff8b;
    text-transform: uppercase;
    white-space: nowrap;
    opacity: .25;
    animation: pulse 2s linear alternate infinite;
  }
  
  @keyframes pulse {
    to {
      opacity: 1;
    }
  }


  @keyframes fireworks-animation {
	0% {
		transform: translate(-50%, 90vh);
		width: 4px;
		opacity: 1;
        z-index: -20;
	}
	50% {
		width: 4px;
		opacity: 1;
        z-index: -20;
	}
	100% {
		width: 600px;
		opacity: 0;
        z-index: -20;
	}
}

.c-firework,
.c-firework::before,
.c-firework::after {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	aspect-ratio: 1;
	background: radial-gradient(circle, yellow 10px, #000 0) 50% 00%,
		radial-gradient(circle, khaki 10px, #000 0) 00% 50%,
		radial-gradient(circle, rgb(81, 194, 232) 10px, #000 0) 50% 99%,
		radial-gradient(circle, rgb(119, 255, 119) 10px, #000 0) 99% 50%,
		radial-gradient(circle, rgb(255, 58, 97) 10px, #000 0) 80% 90%,
		radial-gradient(circle, red 10px, #000 0) 95% 90%,
		radial-gradient(circle, rgb(255, 255, 101) 10px, #000 0) 10% 60%,
		radial-gradient(circle, khaki 10px, #000 0) 31% 80%,
		radial-gradient(circle, rgb(96, 178, 233) 10px, #000 0) 80% 10%,
		radial-gradient(circle, rgb(137, 255, 135) 10px, #000 0) 90% 23%,
		radial-gradient(circle, crimson 10px, #000 0) 45% 20%,
		radial-gradient(circle, rgb(255, 122, 45) 10px, #000 0) 13% 24%;
	background-size: 8px 8px;
	background-repeat: no-repeat;
	transform: translate(-50%, -50%);
	animation: fireworks-animation 4s infinite;
}
.c-firework::before {
	transform: translate(-50%, -50%) rotate(25deg) !important;
}
.c-firework::after {
	transform: translate(-50%, -50%) rotate(-37deg) !important;
}

.c-firework:nth-of-type(2),
.c-firework:nth-of-type(2)::before,
.c-firework:nth-of-type(2)::after {
	top: 30%;
	left: 16%;
	animation-duration: 3.8s;
}
.c-firework:nth-of-type(3),
.c-firework:nth-of-type(3)::before,
.c-firework:nth-of-type(3)::after {
	top: 10%;
	left: 72%;
	animation-duration: 4.2s;
}
.c-firework:nth-of-type(4),
.c-firework:nth-of-type(4)::before,
.c-firework:nth-of-type(4)::after {
	top: 28%;
	left: 32%;
	animation-duration: 3.6s;
}
.c-firework:nth-of-type(5),
.c-firework:nth-of-type(5)::before,
.c-firework:nth-of-type(5)::after {
	top: 32%;
	left: 84%;
	animation-duration: 4.4s;
}
.c-firework:nth-of-type(6),
.c-firework:nth-of-type(6)::before,
.c-firework:nth-of-type(6)::after {
	top: 38%;
	left: 40%;
	animation-duration: 4.1s;
}
.c-firework:nth-of-type(7),
.c-firework:nth-of-type(7)::before,
.c-firework:nth-of-type(7)::after {
	top: 28%;
	left: 64%;
	animation-duration: 3.9s;
}
.c-firework:nth-of-type(8),
.c-firework:nth-of-type(8)::before,
.c-firework:nth-of-type(8)::after {
	top: 30%;
	left: 56%;
	animation-duration: 3.9s;
}


@media screen and (max-width: 750px) {
    .container {
        display: flex;
        flex-direction: column; /* コンテンツを縦方向に配置 */
        justify-content: flex-start; /* コンテンツを上部に揃える */
        align-items: center; /* コンテンツを中央に揃える */
        width: 100%;
        min-height: 50vh; /* 最小高さを設定 */
        padding-top: 100px; /* 上部の余白を設定 */
        box-sizing: border-box;
        position: relative;
        overflow-x: hidden; /* 横方向のスクロールを無効にする */
        overflow-y: hidden; /* 縦方向のスクロールを無効にする */
        z-index: 30; /* 他の要素の背面に配置 */
    
    }
    
    .rectangle {
        position: absolute;
        top: 0%; /* Adjust to position within the container */
        left: 50%;
        transform: translateX(-50%);
        width: 50%; /* Fixed width */
        height: 30%; /* Initial height */
        max-height: 700%; /* Set the maximum height */
        background-color: #f8f65e; /* Yellow color */
        z-index: 998;
        transform-origin: top; /* Scale from the top */
        mask-image: url('Line.png'); /* Use Line.png as mask */
        mask-size: fill; /* Cover the entire element */
        mask-repeat: no-repeat; /* Do not repeat the mask image */
    }

    
}